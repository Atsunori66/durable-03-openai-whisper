# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure Functions: https://aka.ms/python-webapps-actions

name: Build and deploy Python project to Azure Function App - durable-03-openai-whisper

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: 'durable-03-openai-whisper'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  PYTHON_VERSION: '3.11' # set this to the python version to use (supports 3.6, 3.7, 3.8)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: 'Resolve Project Dependencies Using Pip'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        # publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
        scm-do-build-during-deployment: true
        enable-oryx-build: true

  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Setup Python version
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: ${{ env.PYTHON_VERSION }}

  #     - name: Create and start virtual environment
  #       run: |
  #         python -m venv venv
  #         source venv/bin/activate

  #     - name: Install dependencies
  #       run: |
  #         pip install -U pip
  #         pip install -r requirements.txt

  #     # Optional: Add step to run tests here

  #     # - name: Clean up virtual environment
  #     #   run: rm -rf venv

  #     # - name: Zip artifact for deployment
  #     #   run: zip release.zip ./* -r
  #       # run: zip -r release.zip ./* -x "venv/*"

  #     - name: Upload artifact for deployment job
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: python-app
  #         path: |
  #           .
  #           !venv/
  #         # release.zip
  #         # path: release.zip

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   permissions:
  #     id-token: write #This is required for requesting the JWT

  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: python-app
  #         path: .

  #     # - name: Unzip artifact for deployment
  #     #   run: unzip release.zip

  #     - name: Login to Azure
  #       uses: azure/login@v2
  #       with:
  #         client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_2455F5DD504C4B97B13242FF38C9960F }}
  #         tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_C5FC6DCDA2DE49B28C864D87240FE529 }}
  #         subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_E5BFE20D7374466ABB324299516DB528 }}

  #     - name: 'Deploy to Azure Functions'
  #       uses: Azure/functions-action@v1
  #       id: deploy-to-function
  #       with:
  #         app-name: 'durable-03-openai-whisper'
  #         slot-name: 'Production'
  #         package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
  #         # package: './release.zip'
  #         # publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
  #         # scm-do-build-during-deployment: true
  #         # enable-oryx-build: true
